{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rajni\\\\OneDrive\\\\Desktop\\\\BCS Notes\\\\Homework\\\\ReactApp\\\\client\\\\src\\\\pages\\\\loginsignin\\\\components\\\\FormInput.js\";\nimport React from 'react';\nimport styles from '../stylesheets/formInput.module.sass';\nimport capitalizeString from '../utils/capitalizeString';\nexport default function FormInput(_ref) {\n  var name = _ref.name,\n      validations = _ref.validations,\n      errorMessage = _ref.errorMessage,\n      _onBlur = _ref.onBlur,\n      onFocus = _ref.onFocus;\n  return React.createElement(\"div\", {\n    className: styles.outbox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, capitalizeString(name))), React.createElement(\"div\", {\n    className: styles.input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: name.indexOf('assword') > -1 ? 'password' : 'text',\n    name: name,\n    placeholder: name,\n    onBlur: function onBlur(e) {\n      return _onBlur(e, validate(validations, e.target.value));\n    },\n    onFocus: onFocus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: styles.errMsg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, errorMessage));\n}\n\nvar validate = function validate(validations, val) {\n  if (validations) {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = validations[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var validation = _step.value;\n\n        if (!validation.check(val)) {\n          return {\n            isValid: false,\n            errorMsg: validation.errMsg\n          };\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  }\n\n  return {\n    isValid: true\n  };\n};","map":{"version":3,"sources":["C:\\Users\\rajni\\OneDrive\\Desktop\\BCS Notes\\Homework\\ReactApp\\client\\src\\pages\\loginsignin\\components\\FormInput.js"],"names":["React","styles","capitalizeString","FormInput","name","validations","errorMessage","onBlur","onFocus","outbox","label","input","indexOf","e","validate","target","value","errMsg","val","validation","check","isValid","errorMsg"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AAGA,eAAe,SAASC,SAAT,OAMZ;AAAA,MALDC,IAKC,QALDA,IAKC;AAAA,MAJDC,WAIC,QAJDA,WAIC;AAAA,MAHDC,YAGC,QAHDA,YAGC;AAAA,MAFDC,OAEC,QAFDA,MAEC;AAAA,MADDC,OACC,QADDA,OACC;AACD,SACE;AAAK,IAAA,SAAS,EAAEP,MAAM,CAACQ,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAER,MAAM,CAACS,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAEN,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBF,gBAAgB,CAACE,IAAD,CAAvC,CADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAEH,MAAM,CAACU,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAEP,IAAI,CAACQ,OAAL,CAAa,SAAb,IAA0B,CAAC,CAA3B,GAA+B,UAA/B,GAA4C,MADpD;AAEE,IAAA,IAAI,EAAER,IAFR;AAGE,IAAA,WAAW,EAAEA,IAHf;AAIE,IAAA,MAAM,EAAE,gBAACS,CAAD;AAAA,aAAON,OAAM,CAACM,CAAD,EAAIC,QAAQ,CAACT,WAAD,EAAcQ,CAAC,CAACE,MAAF,CAASC,KAAvB,CAAZ,CAAb;AAAA,KAJV;AAKE,IAAA,OAAO,EAAER,OALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,EAaE;AAAK,IAAA,SAAS,EAAEP,MAAM,CAACgB,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,YADH,CAbF,CADF;AAmBD;;AAED,IAAMQ,QAAQ,GAAG,SAAXA,QAAW,CAACT,WAAD,EAAca,GAAd,EAAsB;AACrC,MAAIb,WAAJ,EAAiB;AAAA;AAAA;AAAA;;AAAA;AACf,2BAAyBA,WAAzB,8HAAsC;AAAA,YAA3Bc,UAA2B;;AACpC,YAAI,CAACA,UAAU,CAACC,KAAX,CAAiBF,GAAjB,CAAL,EAA4B;AAC1B,iBAAO;AACLG,YAAAA,OAAO,EAAE,KADJ;AAELC,YAAAA,QAAQ,EAAEH,UAAU,CAACF;AAFhB,WAAP;AAID;AACF;AARc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAShB;;AACD,SAAO;AAAEI,IAAAA,OAAO,EAAE;AAAX,GAAP;AACD,CAZD","sourcesContent":["import React from 'react'\nimport styles from '../stylesheets/formInput.module.sass'\nimport capitalizeString from '../utils/capitalizeString'\n\n\nexport default function FormInput({\n  name,\n  validations,\n  errorMessage,\n  onBlur,\n  onFocus,\n}) {\n  return (\n    <div className={styles.outbox}>\n      <div className={styles.label}>\n        <label htmlFor={name}>{capitalizeString(name)}</label>\n      </div>\n      <div className={styles.input}>\n        <input\n          type={name.indexOf('assword') > -1 ? 'password' : 'text'}\n          name={name}\n          placeholder={name}\n          onBlur={(e) => onBlur(e, validate(validations, e.target.value))}\n          onFocus={onFocus}\n        />\n      </div>\n      <div className={styles.errMsg}>\n        {errorMessage}\n      </div>\n    </div>\n  )\n}\n\nconst validate = (validations, val) => {\n  if (validations) {\n    for (const validation of validations) {\n      if (!validation.check(val)) {\n        return {\n          isValid: false,\n          errorMsg: validation.errMsg\n        }\n      }\n    }\n  }\n  return { isValid: true }\n}\n\n"]},"metadata":{},"sourceType":"module"}